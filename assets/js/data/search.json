[
  
  {
    "title": "데시벨(db)이란?",
    "url": "/posts/%EB%8D%B0%EC%8B%9C%EB%B2%A8(Decibel)/",
    "categories": "StudyLog, AudioKit",
    "tags": "favicon",
    "date": "2025-10-14 01:34:00 +0900",
    "content": "Decibel    🎧 1. dB란 무엇인가요?  ▸ “데시벨”은 소리의 크기를 표현하는 단위입니다.     원래 이름은 “벨(Bell)”이었고, 전화기의 발명자 알렉산더 그레이엄 벨의 이름에서 따왔습니다.   하지만 벨은 너무 큰 단위여서, 실제로는 **1/10 크기인 “데시벨(dB)”**을 사용합니다. → 즉, 1 벨 = 10 dB   ✅ 왜 소리를 숫자로 표현해야 하나요?     우리의 귀는 아주 작은 소리부터 굉장히 큰 소리까지 엄청나게 넓은 범위를 들을 수 있습니다.   그런데 이걸 그냥 1, 2, 3으로 표현하면, 너무 급격하게 늘어나거나 너무 작게 보여서 측정하기도, 비교하기도 불편합니다.     🔢 2. 왜 로그(log) 단위를 쓸까요?  ▸ 사람은 소리의 “비율”을 인식합니다.     예: ● 1에서 2로 커졌을 때 → “어, 좀 더 크네?” ● 10에서 20으로 커졌을 때 → “어, 또 좀 더 크네?” ▶ 우리는 2배 차이일 때 비슷한 느낌을 받습니다. → 이것이 로그 감각입니다.   ✅ 로그는 어떻게 적용되나요?     예: 소리의 에너지가 10배로 커지면 → +10 dB 에너지가 2배로 커지면 → +3 dB (정확히는 약 3.01 dB) 에너지가 절반이 되면 → -3 dB   🎯 즉, dB는 소리의 절대적인 크기보다, 변화의 ‘배율’을 표현하는 단위입니다.    📏 3. 상대값 vs 절대값 dB  ✅ dB (상대값)     기준이 없음, 단순히 얼마나 커졌는지/작아졌는지만 말합니다.   “이 소리, 6dB 더 키워줘” → 지금 상태보다 6dB만큼 증가시키라는 말.   실무에서 믹싱할 때 가장 많이 쓰는 표현입니다.   ✅ dBu, dBV, dB SPL, dBFS 등 (절대값)     기준이 있는 dB입니다. 즉, “얼마나”가 아니라 “몇 볼트인지, 몇 데시벨인지”를 정확히 수치로 표현한 것.                  단위       기준값       용도 예시                       dBu       0.775V RMS       프로용 오디오 장비                 dBV       1V RMS       가정용 오디오 장비                 dBm       1mW (600Ω 기준)       구형 전화/오디오 장비                 dB SPL       20μPa (마이크 기준 압력)       소리의 실제 크기 (데시벨 측정기)                 dBFS       디지털 최대값 (0dBFS = 클리핑)       디지털 오디오 믹싱/마스터링             🎛️ 4. VU 미터 vs 실제 전압  ▸ 0VU는 진짜 ‘0’이 아닙니다!     오디오 장비에는 흔히 VU 미터라는 눈금계가 있습니다.   이 눈금의 0점은 장비마다 기준이 다릅니다:                  장비 종류       0VU 기준       실제 단위       전압(V)                       프로용       +4dBu       약 1.23V       고급 장비 (스튜디오 등)                 아마추어용       -10dBV       약 0.316V       가정용 오디오, 캠코더 등           🎯 즉, 같은 0VU라고 해도, 어떤 장비에선 더 크고, 어떤 장비에선 더 작게 들릴 수 있습니다. 이게 인터페이스 매칭이 중요한 이유입니다.    💡 5. dB를 쉽게 이해하는 비유                 개념       설명                       dB (상대값)       “앞으로 3칸만 가!” → 지금 위치에서의 변화량                 dBu, dBV 등 (절대값)       “지금 너는 정확히 1.23V 위치야” → 정확한 수치 기준             ✅ 최종 요약     dB: 변화량 (상대 단위) → “지금보다 6dB 키워줘”   dBu, dBV: 정확한 기준이 있는 수치 → 장비 연결 시 중요   dB SPL: 환경 소음 등 실제 소리의 크기 측정 시 사용   dBFS: 디지털 오디오에서 소리 크기의 최댓값 기준 (0이 최고치, 더 크면 클리핑)   VU 미터: 장비에 따라 기준이 다르므로 주의 필요     수치 및 변환 예제  아래는 dBu, dBV, dBFS, dB SPL 등의 대표적인 dB 단위들의 수치 예제와 상호 변환 예제를 상세히 정리한 내용입니다. 수식도 함께 소개하겠습니다.    📐 1. dBu, dBV, dBFS, dB SPL 간단 요약                 단위       기준 값       의미       주로 쓰이는 분야                       dBu       0.775V (RMS)       전압 기준, 프로 오디오 장비용       믹서, 인터페이스 등                 dBV       1V (RMS)       전압 기준, 가정용/소비자 오디오용       CDP, 하이파이 등                 dBFS       디지털 최대값 (0dBFS)       디지털의 최대값 기준       DAW, 디지털 믹싱                 dB SPL       20μPa       소리의 압력 기준       마이크, 환경 소음계             🧮 2. dBu ↔ 전압 변환 예제  공식:     V (RMS) = 0.775 × 10^(dBu / 20)   dBu = 20 × log10(V / 0.775)                  dBu       전압 (V RMS)       비고                       0 dBu       0.775V       기준값                 +4 dBu       약 1.23V       프로 오디오 표준                 -10 dBu       약 0.245V       약한 신호 수준                 +10 dBu       약 2.45V       비교적 강한 신호             🧮 3. dBV ↔ 전압 변환 예제  공식:     V (RMS) = 10^(dBV / 20)   dBV = 20 × log10(V)                  dBV       전압 (V RMS)       비고                       0 dBV       1.00V       기준값                 -10 dBV       약 0.316V       컨슈머 오디오 표준                 +6 dBV       약 2.00V       강한 신호 수준             🔄 4. dBu ↔ dBV 변환 예제  공식:     dBV = dBu - 2.21   dBu = dBV + 2.21                  dBu       dBV       설명                       +4 dBu       +1.79 dBV       프로 오디오 기준 전환값                 0 dBu       -2.21 dBV                         -10 dBV       -7.79 dBu                     🧮 5. dBFS 예제 (디지털 오디오)     dBFS는 **디지털 오디오에서 최대치(클리핑 지점)**를 0으로 놓고 상대값을 계산합니다.   일반적으로 0 dBFS가 가장 큰 소리, 그보다 작으면 음량이 낮은 상태입니다.                  dBFS       의미                       0 dBFS       디지털 최대값 (클리핑 지점)                 -6 dBFS       최대값의 약 50%                 -12 dBFS       최대값의 약 25%                 -18 dBFS       일반적인 믹싱 기준 (헤드룸 확보)                 -60 dBFS       아주 약한 신호           🎯 dBFS는 절대값처럼 보이지만 디지털 장비 기준의 상대값이라고 이해하셔도 좋습니다.    🧮 6. dB SPL 예제 (음압)  공식:     dB SPL = 20 × log10(P / Pref) 여기서 Pref = 20μPa (2 × 10^-5 Pa) = 인간이 들을 수 있는 가장 작은 소리                  dB SPL       실생활 예시                       0 dB SPL       거의 무음 (사람이 간신히 들을 수 있는 소리)                 30 dB SPL       속삭임, 아주 조용한 방                 60 dB SPL       일반 대화                 85 dB SPL       도로 소음, 위험 경계선                 100 dB SPL       지하철, 시끄러운 음악                 120 dB SPL       귀가 아픈 소리, 통증 시작 지점             🔁 예제 변환 시나리오  🎧 예제 1: +4 dBu는 몇 dBV인가요?     dBV = dBu - 2.21 = 4 - 2.21 = 1.79 dBV     🎧 예제 2: 0.316V는 몇 dBu인가요?     dBu = 20 × log10(0.316 / 0.775)   계산하면 ≈ -10.2 dBu     🎧 예제 3: -6 dBFS는 dBu로 얼마일까요?     이건 디지털 장비가 아날로그로 변환되는 출력 단계에서만 의미가 있습니다.   예: 디지털 인터페이스의 기준 출력이 0 dBFS = +18 dBu라고 가정하면, → -6 dBFS는 약 +12 dBu에 해당합니다. (이는 장비 설정에 따라 다릅니다)     🧭 참고 팁     dBu, dBV는 전압 기반   dBm은 전력 기반 (잘 안 쓰임)   dBFS는 디지털 최대값 기준   dB SPL은 공기의 압력 기반     "
  },
  
  {
    "title": "NodeParameter 예제",
    "url": "/posts/NodeParameter_%EC%98%88%EC%A0%9C/",
    "categories": "StudyLog, AudioKit",
    "tags": "favicon",
    "date": "2025-10-14 01:34:00 +0900",
    "content": "NodeParameter 예제            Master Volume             전체 소리의 출력 볼륨을 조절합니다.       값이 크면 소리가 커지고, 값이 작으면 소리가 작아집니다.                Pitch bend (semitones)             피치 벤드 휠로 조절할 수 있는 음의 최대 변화 폭을 설정합니다.       값이 크면 더 넓은 음정 변화가 가능하고, 값이 작으면 변화 범위가 좁아집니다.                Vibrato Depth             음정의 진동(비브라토) 강도를 설정합니다.       값이 크면 음이 크게 흔들리고, 값이 작으면 거의 흔들림이 없습니다.                Vibrato Speed (Hz)             진동의 속도를 설정합니다.       값이 크면 빠르게 흔들리고, 값이 작으면 느리게 흔들립니다.                Filter Resonance             컷오프 주파수 주변을 강조합니다.       값이 크면 날카롭고 공명감 있는 소리가 나고, 값이 작으면 부드럽고 평탄한 소리가 납니다.                Glide rate (sec/octave)             음과 음 사이의 포르타멘토(부드러운 피치 이동) 속도를 조절합니다.       값이 크면 음과 음 사이가 천천히 연결되고, 값이 작으면 거의 즉시 전환됩니다.                Attack Duration (s)             소리가 시작된 후 최대로 도달하는 데 걸리는 시간을 설정합니다.       값이 크면 소리가 천천히 올라오고, 값이 작으면 즉시 소리가 납니다.                Hold Duration (s)             Attack 이후 최대 레벨을 유지하는 시간을 설정합니다.       값이 크면 일정 시간 머무르고, 값이 작으면 곧바로 Decay로 넘어갑니다.                Voice Vibrato (semitones)             음정에 적용되는 진동의 깊이를 설정합니다.       값이 크면 음정이 넓게 흔들리고, 값이 작으면 거의 흔들리지 않습니다.                Decay Duration (s)             Attack 이후 Sustain 레벨까지 내려가는 데 걸리는 시간입니다.       값이 크면 천천히 줄어들고, 값이 작으면 빠르게 줄어듭니다.                Voice Vibrato speed (Hz)             음정 진동의 속도를 조절합니다.       값이 크면 빠르게 흔들리고, 값이 작으면 느리게 흔들립니다.                Filter Cutoff             필터가 통과시키는 주파수의 경계점을 설정합니다.       값이 크면 밝고 높은 음이 많이 통과하고, 값이 작으면 어두운 저음만 통과합니다.                Filter Strength             필터에 적용되는 모듈레이션의 강도를 설정합니다.       값이 크면 필터 변화가 크게 적용되고, 값이 작으면 거의 영향을 받지 않습니다.                Sustain Level             키를 누르고 있는 동안 유지되는 소리의 레벨입니다.       값이 크면 소리가 길게 유지되고, 값이 작으면 빠르게 사라집니다.                Release Duration (s)             키를 뗀 이후 소리가 완전히 사라지는 데 걸리는 시간입니다.       값이 크면 소리가 천천히 사라지고, 값이 작으면 즉시 사라집니다.                Filter Attack Duration (s)             필터 컷오프가 상승하는 데 걸리는 시간입니다.       값이 크면 점진적으로 변화하고, 값이 작으면 즉시 적용됩니다.                Filter Decay Duration (s)             필터 컷오프가 Attack 후 줄어드는 데 걸리는 시간입니다.       값이 크면 천천히 줄어들고, 값이 작으면 빠르게 줄어듭니다.                Filter Sustain Level             필터의 컷오프가 지속적으로 유지되는 레벨입니다.       값이 크면 밝은 음색이 유지되고, 값이 작으면 어두운 음색이 유지됩니다.                Filter Release Duration (s)             필터 컷오프가 키 릴리즈 후 원위치로 돌아가는 시간입니다.       값이 크면 천천히 변화하고, 값이 작으면 즉시 사라집니다.                Pitch Attack Duration (s)             음정이 시작 시 변하는 속도를 조절합니다.       값이 크면 피치가 천천히 상승하고, 값이 작으면 즉시 목표 피치에 도달합니다.                Pitch Decay Duration (s)             피치가 Attack 후 목표 값으로 줄어드는 시간입니다.       값이 크면 천천히 줄어들고, 값이 작으면 빠르게 줄어듭니다.                Pitch Sustain Level             피치가 유지되는 값입니다.       값이 크면 피치가 유지되고, 값이 작으면 유지되지 않습니다.                Pitch Release Duration (s)             키를 뗀 후 피치가 원래 값으로 돌아가는 데 걸리는 시간입니다.       값이 크면 천천히 되돌아가고, 값이 작으면 바로 되돌아갑니다.                Pitch EG Amount duration (semitones)             피치에 적용되는 Envelope의 세기입니다.       값이 크면 음정 변동 폭이 커지고, 값이 작으면 변동이 거의 없습니다.                isLegato             레가토(부드럽게 연결된 연주)를 활성화합니다.       값이 크면 음들이 부드럽게 연결되고, 값이 작으면 각 음이 분리되어 들립니다.                Key Tracking             키 높이에 따라 필터 컷오프를 조절합니다.       값이 크면 높은 음일수록 컷오프가 높아지고, 값이 작으면 변화가 없습니다.                Filter Envelope Scaling             필터에 대한 Envelope의 전체 영향을 조절합니다.       값이 크면 Envelope 효과가 크게 적용되고, 값이 작으면 거의 적용되지 않습니다.                restartVoiceLFO             음을 누를 때마다 LFO를 다시 시작할지를 설정합니다.       값이 크면 항상 처음부터 시작되고, 값이 작으면 이전 상태를 유지합니다.                Filter Enable             필터 기능을 켜거나 끕니다.       값이 크면 필터가 적용되고, 값이 작으면 필터가 적용되지 않습니다.                loopThruRelease             Release 중에도 루프가 유지될지를 설정합니다.       값이 크면 릴리즈 동안도 루프가 계속되고, 값이 작으면 릴리즈에서 루프가 멈춥니다.                isMonophonic             모노포닉(한 음만 연주 가능) 모드를 설정합니다.       값이 크면 한 번에 한 음만 연주되고, 값이 작으면 여러 음을 동시에 연주할 수 있습니다.             "
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-11 01:34:00 +0900",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.  Generate the favicon  Prepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.  In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.  Download &amp; Replace  Download the generated package, unzip and delete the following two from the extracted files:     browserconfig.xml   site.webmanifest   And then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.  The following table will help you understand the changes to the favicon files:                 File(s)       From Online Tool       From Chirpy                       *.PNG       ✓       ✗                 *.ICO       ✓       ✗               ✓ means keep, ✗ means delete.   The next time you build the site, the favicon will be replaced with a customized edition. "
  },
  
  {
    "title": "Getting Started",
    "url": "/posts/getting-started/",
    "categories": "Blogging, Tutorial",
    "tags": "getting started",
    "date": "2019-08-09 21:55:00 +0900",
    "content": "Get started with Chirpy basics in this comprehensive overview. You will learn how to install, configure, and use your first Chirpy-based website, as well as deploy it to a web server."
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 15:10:00 +0900",
    "content": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.  Naming and Path  Create a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.  Front Matter  Basically, you need to fill the Front Matter as below at the top of the post:  --- title: TITLE date: YYYY-MM-DD HH:MM:SS +/-TTTT categories: [TOP_CATEGORY, SUB_CATEGORY] tags: [TAG]     # TAG names should always be lowercase ---      The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.   Timezone of Date  To accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.  Categories and Tags  The categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:  --- categories: [Animal, Insect] tags: [bee] ---   Author Information  The author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:  Adding author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one).  &lt;author_id&gt;:   name: &lt;full name&gt;   twitter: &lt;twitter_of_author&gt;   url: &lt;homepage_of_author&gt;   And then use author to specify a single entry or authors to specify multiple entries:  --- author: &lt;author_id&gt;                     # for single entry # or authors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries ---   Having said that, the key author can also identify multiple entries.     The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.   Post Description  By default, the first words of the post are used to display on the home page for a list of posts, in the Further Reading section, and in the XML of the RSS feed. If you don’t want to display the auto-generated description for the post, you can customize it using the description field in the Front Matter as follows:  --- description: Short summary of the post. ---   Additionally, the description text will also be displayed under the post title on the post’s page.  Table of Contents  By default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:  --- toc: false ---   Comments  The global setting for comments is defined by the comments.provider option in the _config.yml file. Once a comment system is selected for this variable, comments will be enabled for all posts.  If you want to close the comment for a specific post, add the following to the Front Matter of the post:  --- comments: false ---   Media  We refer to images, audio and video as media resources in Chirpy.  URL Prefix  From time to time we have to define duplicate URL prefixes for multiple resources in a post, which is a boring task that you can avoid by setting two parameters.          If you are using a CDN to host media files, you can specify the cdn in _config.yml. The URLs of media resources for site avatar and posts are then prefixed with the CDN domain name.      cdn: https://cdn.com                To specify the resource path prefix for the current post/page range, set media_subpath in the front matter of the post:      --- media_subpath: /path/to/media/ ---           The option site.cdn and page.media_subpath can be used individually or in combination to flexibly compose the final resource URL: [site.cdn/][page.media_subpath/]file.ext  Images  Caption  Add italics to the next line of an image, then it will become the caption and appear at the bottom of the image:  ![img-description](/path/to/image) _Image Caption_   Size  To prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image.  ![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }      For an SVG, you have to at least specify its width, otherwise it won’t be rendered.   Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:  ![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }   Position  By default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.     Once the position is specified, the image caption should not be added.           Normal position      Image will be left aligned in below sample:      ![Desktop View](/assets/img/sample/mockup.png){: .normal }                Float to the left      ![Desktop View](/assets/img/sample/mockup.png){: .left }                Float to the right      ![Desktop View](/assets/img/sample/mockup.png){: .right }           Dark/Light mode  You can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (dark or light):  ![Light mode only](/path/to/light-mode.png){: .light } ![Dark mode only](/path/to/dark-mode.png){: .dark }   Shadow  The screenshots of the program window can be considered to show the shadow effect:  ![Desktop View](/assets/img/sample/mockup.png){: .shadow }   Preview Image  If you want to add an image at the top of the post, please provide an image with a resolution of 1200 x 630. Please note that if the image aspect ratio does not meet 1.91 : 1, the image will be scaled and cropped.  Knowing these prerequisites, you can start setting the image’s attribute:  --- image:   path: /path/to/image   alt: image alternative text ---   Note that the media_subpath can also be passed to the preview image, that is, when it has been set, the attribute path only needs the image file name.  For simple use, you can also just use image to define the path.  --- image: /path/to/image ---   LQIP  For preview images:  --- image:   lqip: /path/to/lqip-file # or base64 URI ---      You can observe LQIP in the preview image of post \"Text and Typography\".   For normal images:  ![Image description](/path/to/image){: lqip=\"/path/to/lqip-file\" }   Social Media Platforms  You can embed video/audio from social media platforms with the following syntax:  {% include embed/{Platform}.html id='{ID}' %}   Where Platform is the lowercase of the platform name, and ID is the video ID.  The following table shows how to get the two parameters we need in a given video/audio URL, and you can also know the currently supported video platforms.                 Video URL       Platform       ID                       https://www.youtube.com/watch?v=H-B46URT4mg       youtube       H-B46URT4mg                 https://www.twitch.tv/videos/1634779211       twitch       1634779211                 https://www.bilibili.com/video/BV1Q44y1B7Wf       bilibili       BV1Q44y1B7Wf                 https://www.open.spotify.com/track/3OuMIIFP5TxM8tLXMWYPGV       spotify       3OuMIIFP5TxM8tLXMWYPGV           Spotify supports some additional parameters:     compact - to display compact player instead (ex. {% include embed/spotify.html id='3OuMIIFP5TxM8tLXMWYPGV' compact=1 %});   dark - to force dark theme (ex. {% include embed/spotify.html id='3OuMIIFP5TxM8tLXMWYPGV' dark=1 %}).   Video Files  If you want to embed a video file directly, use the following syntax:  {% include embed/video.html src='{URL}' %}   Where URL is a URL to a video file e.g. /path/to/sample/video.mp4.  You can also specify additional attributes for the embedded video file. Here is a full list of attributes allowed.     poster='/path/to/poster.png' — poster image for a video that is shown while video is downloading   title='Text' — title for a video that appears below the video and looks same as for images   autoplay=true — video automatically begins to play back as soon as it can   loop=true — automatically seek back to the start upon reaching the end of the video   muted=true — audio will be initially silenced   types — specify the extensions of additional video formats separated by |. Ensure these files exist in the same directory as your primary video file.   Consider an example using all of the above:  {%   include embed/video.html   src='/path/to/video.mp4'   types='ogg|mov'   poster='poster.png'   title='Demo video'   autoplay=true   loop=true   muted=true %}   Audio Files  If you want to embed an audio file directly, use the following syntax:  {% include embed/audio.html src='{URL}' %}   Where URL is a URL to an audio file e.g. /path/to/audio.mp3.  You can also specify additional attributes for the embedded audio file. Here is a full list of attributes allowed.     title='Text' — title for an audio that appears below the audio and looks same as for images   types — specify the extensions of additional audio formats separated by |. Ensure these files exist in the same directory as your primary audio file.   Consider an example using all of the above:  {%   include embed/audio.html   src='/path/to/audio.mp3'   types='ogg|wav|aac'   title='Demo audio' %}   Pinned Posts  You can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:  --- pin: true ---   Prompts  There are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:  &gt; Example line for prompt. {: .prompt-info }   Syntax  Inline Code  `inline code part`   Filepath Highlight  `/path/to/a/file.extend`{: .filepath}   Code Block  Markdown symbols ``` can easily create a code block as follows:  ``` This is a plaintext code snippet. ```   Specifying Language  Using ```{language} you will get a code block with syntax highlight:  ```yaml key: value ```      The Jekyll tag {% highlight %} is not compatible with this theme.   Line Number  By default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:  ```shell echo 'No more line numbers!' ``` {: .nolineno }   Specifying the Filename  You may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:  ```shell # content ``` {: file=\"path/to/file\" }   Liquid Codes  If you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:  {% raw %} ```liquid {% if product.title contains 'Pack' %}   This product's title contains the word Pack. {% endif %} ``` {% endraw %}   Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.  Mathematics  We use MathJax to generate mathematics. For website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:  --- math: true ---   After enabling the mathematical feature, you can add math equations with the following syntax:     Block math should be added with $$ math $$ with mandatory blank lines before and after $$            Inserting equation numbering should be added with $$\\begin{equation} math \\end{equation}$$       Referencing equation numbering should be done with \\label{eq:label_name} in the equation block and \\eqref{eq:label_name} inline with text (see example below)           Inline math (in lines) should be added with $$ math $$ without any blank line before or after $$   Inline math (in lists) should be added with \\$$ math $$   &lt;!-- Block math, keep all blank lines --&gt;  $$ LaTeX_math_expression $$  &lt;!-- Equation numbering, keep all blank lines  --&gt;  $$ \\begin{equation}   LaTeX_math_expression   \\label{eq:label_name} \\end{equation} $$  Can be referenced as \\eqref{eq:label_name}.  &lt;!-- Inline math in lines, NO blank lines --&gt;  \"Lorem ipsum dolor sit amet, $$ LaTeX_math_expression $$ consectetur adipiscing elit.\"  &lt;!-- Inline math in lists, escape the first `$` --&gt;  1. \\$$ LaTeX_math_expression $$ 2. \\$$ LaTeX_math_expression $$ 3. \\$$ LaTeX_math_expression $$      Starting with v7.0.0, configuration options for MathJax have been moved to file assets/js/data/mathjax.js, and you can change the options as needed, such as adding extensions. If you are building the site via chirpy-starter, copy that file from the gem installation directory (check with command bundle info --path jekyll-theme-chirpy) to the same directory in your repository.   Mermaid  Mermaid is a great diagram generation tool. To enable it on your post, add the following to the YAML block:  --- mermaid: true ---   Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.  Learn More  For more knowledge about Jekyll posts, visit the Jekyll Docs: Posts. "
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 12:33:00 +0900",
    "content": "Examples of text, typography, math equations, diagrams, flowcharts, pictures, videos, and more."
  }
  
]

