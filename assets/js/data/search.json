[
  
  {
    "title": "데시벨(db)이란?",
    "url": "/posts/Decibel/",
    "categories": "StudyLog, AudioKit",
    "tags": "favicon",
    "date": "2025-10-14 01:34:00 +0900",
    "content": "Decibel    🎧 1. dB란 무엇인가요?  ▸ “데시벨”은 소리의 크기를 표현하는 단위입니다.     원래 이름은 “벨(Bell)”이었고, 전화기의 발명자 알렉산더 그레이엄 벨의 이름에서 따왔습니다.   하지만 벨은 너무 큰 단위여서, 실제로는 **1/10 크기인 “데시벨(dB)”**을 사용합니다. → 즉, 1 벨 = 10 dB   ✅ 왜 소리를 숫자로 표현해야 하나요?     우리의 귀는 아주 작은 소리부터 굉장히 큰 소리까지 엄청나게 넓은 범위를 들을 수 있습니다.   그런데 이걸 그냥 1, 2, 3으로 표현하면, 너무 급격하게 늘어나거나 너무 작게 보여서 측정하기도, 비교하기도 불편합니다.     🔢 2. 왜 로그(log) 단위를 쓸까요?  ▸ 사람은 소리의 “비율”을 인식합니다.     예: ● 1에서 2로 커졌을 때 → “어, 좀 더 크네?” ● 10에서 20으로 커졌을 때 → “어, 또 좀 더 크네?” ▶ 우리는 2배 차이일 때 비슷한 느낌을 받습니다. → 이것이 로그 감각입니다.   ✅ 로그는 어떻게 적용되나요?     예: 소리의 에너지가 10배로 커지면 → +10 dB 에너지가 2배로 커지면 → +3 dB (정확히는 약 3.01 dB) 에너지가 절반이 되면 → -3 dB   🎯 즉, dB는 소리의 절대적인 크기보다, 변화의 ‘배율’을 표현하는 단위입니다.    📏 3. 상대값 vs 절대값 dB  ✅ dB (상대값)     기준이 없음, 단순히 얼마나 커졌는지/작아졌는지만 말합니다.   “이 소리, 6dB 더 키워줘” → 지금 상태보다 6dB만큼 증가시키라는 말.   실무에서 믹싱할 때 가장 많이 쓰는 표현입니다.   ✅ dBu, dBV, dB SPL, dBFS 등 (절대값)     기준이 있는 dB입니다. 즉, “얼마나”가 아니라 “몇 볼트인지, 몇 데시벨인지”를 정확히 수치로 표현한 것.                  단위       기준값       용도 예시                       dBu       0.775V RMS       프로용 오디오 장비                 dBV       1V RMS       가정용 오디오 장비                 dBm       1mW (600Ω 기준)       구형 전화/오디오 장비                 dB SPL       20μPa (마이크 기준 압력)       소리의 실제 크기 (데시벨 측정기)                 dBFS       디지털 최대값 (0dBFS = 클리핑)       디지털 오디오 믹싱/마스터링             🎛️ 4. VU 미터 vs 실제 전압  ▸ 0VU는 진짜 ‘0’이 아닙니다!     오디오 장비에는 흔히 VU 미터라는 눈금계가 있습니다.   이 눈금의 0점은 장비마다 기준이 다릅니다:                  장비 종류       0VU 기준       실제 단위       전압(V)                       프로용       +4dBu       약 1.23V       고급 장비 (스튜디오 등)                 아마추어용       -10dBV       약 0.316V       가정용 오디오, 캠코더 등           🎯 즉, 같은 0VU라고 해도, 어떤 장비에선 더 크고, 어떤 장비에선 더 작게 들릴 수 있습니다. 이게 인터페이스 매칭이 중요한 이유입니다.    💡 5. dB를 쉽게 이해하는 비유                 개념       설명                       dB (상대값)       “앞으로 3칸만 가!” → 지금 위치에서의 변화량                 dBu, dBV 등 (절대값)       “지금 너는 정확히 1.23V 위치야” → 정확한 수치 기준             ✅ 최종 요약     dB: 변화량 (상대 단위) → “지금보다 6dB 키워줘”   dBu, dBV: 정확한 기준이 있는 수치 → 장비 연결 시 중요   dB SPL: 환경 소음 등 실제 소리의 크기 측정 시 사용   dBFS: 디지털 오디오에서 소리 크기의 최댓값 기준 (0이 최고치, 더 크면 클리핑)   VU 미터: 장비에 따라 기준이 다르므로 주의 필요     수치 및 변환 예제  아래는 dBu, dBV, dBFS, dB SPL 등의 대표적인 dB 단위들의 수치 예제와 상호 변환 예제를 상세히 정리한 내용입니다. 수식도 함께 소개하겠습니다.    📐 1. dBu, dBV, dBFS, dB SPL 간단 요약                 단위       기준 값       의미       주로 쓰이는 분야                       dBu       0.775V (RMS)       전압 기준, 프로 오디오 장비용       믹서, 인터페이스 등                 dBV       1V (RMS)       전압 기준, 가정용/소비자 오디오용       CDP, 하이파이 등                 dBFS       디지털 최대값 (0dBFS)       디지털의 최대값 기준       DAW, 디지털 믹싱                 dB SPL       20μPa       소리의 압력 기준       마이크, 환경 소음계             🧮 2. dBu ↔ 전압 변환 예제  공식:     V (RMS) = 0.775 × 10^(dBu / 20)   dBu = 20 × log10(V / 0.775)                  dBu       전압 (V RMS)       비고                       0 dBu       0.775V       기준값                 +4 dBu       약 1.23V       프로 오디오 표준                 -10 dBu       약 0.245V       약한 신호 수준                 +10 dBu       약 2.45V       비교적 강한 신호             🧮 3. dBV ↔ 전압 변환 예제  공식:     V (RMS) = 10^(dBV / 20)   dBV = 20 × log10(V)                  dBV       전압 (V RMS)       비고                       0 dBV       1.00V       기준값                 -10 dBV       약 0.316V       컨슈머 오디오 표준                 +6 dBV       약 2.00V       강한 신호 수준             🔄 4. dBu ↔ dBV 변환 예제  공식:     dBV = dBu - 2.21   dBu = dBV + 2.21                  dBu       dBV       설명                       +4 dBu       +1.79 dBV       프로 오디오 기준 전환값                 0 dBu       -2.21 dBV                         -10 dBV       -7.79 dBu                     🧮 5. dBFS 예제 (디지털 오디오)     dBFS는 **디지털 오디오에서 최대치(클리핑 지점)**를 0으로 놓고 상대값을 계산합니다.   일반적으로 0 dBFS가 가장 큰 소리, 그보다 작으면 음량이 낮은 상태입니다.                  dBFS       의미                       0 dBFS       디지털 최대값 (클리핑 지점)                 -6 dBFS       최대값의 약 50%                 -12 dBFS       최대값의 약 25%                 -18 dBFS       일반적인 믹싱 기준 (헤드룸 확보)                 -60 dBFS       아주 약한 신호           🎯 dBFS는 절대값처럼 보이지만 디지털 장비 기준의 상대값이라고 이해하셔도 좋습니다.    🧮 6. dB SPL 예제 (음압)  공식:     dB SPL = 20 × log10(P / Pref) 여기서 Pref = 20μPa (2 × 10^-5 Pa) = 인간이 들을 수 있는 가장 작은 소리                  dB SPL       실생활 예시                       0 dB SPL       거의 무음 (사람이 간신히 들을 수 있는 소리)                 30 dB SPL       속삭임, 아주 조용한 방                 60 dB SPL       일반 대화                 85 dB SPL       도로 소음, 위험 경계선                 100 dB SPL       지하철, 시끄러운 음악                 120 dB SPL       귀가 아픈 소리, 통증 시작 지점             🔁 예제 변환 시나리오  🎧 예제 1: +4 dBu는 몇 dBV인가요?     dBV = dBu - 2.21 = 4 - 2.21 = 1.79 dBV     🎧 예제 2: 0.316V는 몇 dBu인가요?     dBu = 20 × log10(0.316 / 0.775)   계산하면 ≈ -10.2 dBu     🎧 예제 3: -6 dBFS는 dBu로 얼마일까요?     이건 디지털 장비가 아날로그로 변환되는 출력 단계에서만 의미가 있습니다.   예: 디지털 인터페이스의 기준 출력이 0 dBFS = +18 dBu라고 가정하면, → -6 dBFS는 약 +12 dBu에 해당합니다. (이는 장비 설정에 따라 다릅니다)     🧭 참고 팁     dBu, dBV는 전압 기반   dBm은 전력 기반 (잘 안 쓰임)   dBFS는 디지털 최대값 기준   dB SPL은 공기의 압력 기반     "
  },
  
  {
    "title": "Delay",
    "url": "/posts/Delay/",
    "categories": "",
    "tags": "",
    "date": "2025-06-05 00:00:00 +0900",
    "content": "Delay  음향에서 **딜레이(Delay)**는 소리를 일정 시간 지연시켜 다시 재생하는 **시간 기반 이펙트(time-based effect)**입니다. 이는 원래의 소리(dry signal)에 지연된 복제본(wet signal)을 더하여 공간감, 깊이, 리듬감, 반복 효과 등을 만들어냅니다.    📌 딜레이의 기본 개념     입력된 소리를 n 밀리초(또는 초) 동안 기다렸다가 다시 재생   인간의 귀는 30ms 이상의 지연을 “반사” 또는 “메아리”처럼 인식함     🎧 예시          에코(Echo)             “하이”라고 말하면, 잠시 후 “하이… 하이…”가 반복됨 → 딜레이 타임과 피드백이 큰 경우                슬랩백 딜레이(Slapback Delay)             짧은 딜레이(약 80~120ms)로 “하이-하이” 느낌 → 일렉트릭 기타 등에서 흔히 사용됨             ⚙️ 주요 매개변수                 매개변수       설명                       Delay Time       소리를 얼마나 늦게 재생할지 (ms 또는 s)                 Feedback       지연된 소리를 몇 번 반복할지 (0.0 ~ 1.0)                 Mix / Balance       원래 소리와 지연된 소리의 비율 조절                 Wet/Dry       Wet = 효과음, Dry = 원래 소리             🎼 딜레이의 응용                 응용 분야       설명                       보컬 딜레이       라이브 공연, 믹싱에서 공간감과 감정을 강조                 기타 딜레이       음을 겹쳐 풍부한 사운드를 만듦                 EDM / 힙합       리듬을 강조하고 루프 효과를 추가                 앰비언트 사운드       깊고 지속적인 공간감 생성             🔬 작동 원리 (기초적인 알고리즘)  [Input Signal] → [Delay Buffer] → [Output]                               ↑                        (Feedback Loop)      소리가 Delay Buffer에 저장됨   정해진 시간이 지나면 출력으로 나감   Feedback이 있으면 그 출력이 다시 Delay Buffer로 들어가 재반복됨     🔊 딜레이 vs 리버브                 항목       딜레이       리버브                       지연 횟수       명확한 반복       수많은 잔향                 공간 표현       메아리, 반복       방 크기, 반사                 시간 간격       수십 ms ~ 수 초       보통 짧은 밀리초 단위 다수                 용도       리듬, 강조       공간감, 자연스러움             ✅ 요약     딜레이는 소리를 늦게 재생하여 반복, 에코, 리듬, 공간 효과를 만듦   다양한 음악 장르와 사운드 디자인에서 핵심적인 역할   딜레이 시간, 피드백, 믹스 값에 따라 느낌이 크게 달라짐   따라서 딜레이는 단순히 소리를 반복하는 것을 넘어 감정과 공간을 디자인하는 도구라고 할 수 있습니다.  "
  },
  
  {
    "title": "랜덤노이즈",
    "url": "/posts/%EB%9E%9C%EB%8D%A4%EB%85%B8%EC%9D%B4%EC%A6%88/",
    "categories": "",
    "tags": "",
    "date": "2025-05-09 00:00:00 +0900",
    "content": "랜덤 노이즈  화이트 노이즈, 핑크 노이즈, 브라우니안(Brownian) 노이즈는 모두 스펙트럼 에너지 분포가 다른 랜덤 신호입니다. 이들은 소리의 특성과 에너지 분포를 다르게 하며, 오디오 테스트, 사운드 디자인, 백색소음 치료, 모듈레이션 등에 사용됩니다.  아래에 각각의 정의, 청각적 특징, 생성 방식(알고리즘)을 정리해 드리겠습니다.    🎧 1. 화이트 노이즈 (White Noise)  🔹 정의     모든 주파수 대역에 같은 에너지를 가지는 노이즈   스펙트럼 밀도: 0dB/옥타브   주파수당 에너지 분포가 균등함     🔹 청각적 특징     샤아아아아 소리 (TV 안테나 잡음과 유사)   고역이 강조되어 다소 날카롭게 들림   🔹 생성 방식  // 샘플마다 랜덤한 값을 생성 sample = Float.random(in: -1.0...1.0)      단순히 uniform 랜덤 값으로 오디오 버퍼를 채우면 됩니다.     🌸 2. 핑크 노이즈 (Pink Noise)  🔹 정의     주파수가 2배가 될수록 에너지가 절반으로 줄어듦   스펙트럼 밀도: -3dB/옥타브   인간 청각 특성에 더 자연스럽게 들리는 노이즈     🔹 청각적 특징     부드러운 바람소리, 빗소리와 유사   고역이 덜 강조됨   🔹 생성 방식          필터 방식:             화이트 노이즈 → 1/f 필터(로우패스 계열 필터)를 통과시켜 감쇠       예: IIR 필터나 FIR 필터 사용                Voss-McCartney 알고리즘:             여러 개의 서로 다른 주기에서 값을 바꾸는 난수 발생기       각 샘플마다 일부만 갱신하여 저역 강조됨                오디오키트 예시:      let pinkNoise = PinkNoise(amplitude: 0.5)      내부적으로는 고역을 점차 감쇠시키는 방식 사용     🟤 3. 브라우니안 노이즈 (Brown Noise = Brownian, 적색 노이즈)  🔹 정의     주파수 증가에 따라 에너지가 급격히 감소   스펙트럼 밀도: -6dB/옥타브   Brownian motion(브라운 운동)의 누적 효과와 유사   https://github.com/user-attachments/assets/f52dafb0-226b-44b3-8a69-0fead88768d2  🔹 청각적 특징     무거운 저음 중심, 폭풍 소리 느낌   고역 거의 없음   🔹 생성 방식  // 이전 샘플값에 현재 난수값을 누적 var lastSample = 0.0 let currentSample = lastSample + Double.random(in: -0.05...0.05) lastSample = currentSample      즉, 화이트 노이즈를 적분한 형태 → 신호가 누적되면서 저역 성분이 강해짐     📊 요약 비교                 구분       에너지 분포       청각 특징       생성 방식 요약                       화이트 노이즈       평탄(0dB/옥타브)       샤아아, 고역 많음       random(-1...1)                 핑크 노이즈       -3dB/옥타브 감소       자연음에 가까움       필터 or Voss-McCartney                 브라운 노이즈       -6dB/옥타브 감소       무겁고 둔탁한 저음       누적형: y[n] = y[n-1] + rand            "
  },
  
  {
    "title": "NodeParameter 예제",
    "url": "/posts/NodeParameter_%EC%98%88%EC%A0%9C/",
    "categories": "StudyLog, AudioKit",
    "tags": "AudioKit, 음향이론",
    "date": "2025-05-05 18:20:00 +0900",
    "content": "NodeParameter 예제            Master Volume             전체 소리의 출력 볼륨을 조절합니다.       값이 크면 소리가 커지고, 값이 작으면 소리가 작아집니다.                Pitch bend (semitones)             피치 벤드 휠로 조절할 수 있는 음의 최대 변화 폭을 설정합니다.       값이 크면 더 넓은 음정 변화가 가능하고, 값이 작으면 변화 범위가 좁아집니다.                Vibrato Depth             음정의 진동(비브라토) 강도를 설정합니다.       값이 크면 음이 크게 흔들리고, 값이 작으면 거의 흔들림이 없습니다.                Vibrato Speed (Hz)             진동의 속도를 설정합니다.       값이 크면 빠르게 흔들리고, 값이 작으면 느리게 흔들립니다.                Filter Resonance             컷오프 주파수 주변을 강조합니다.       값이 크면 날카롭고 공명감 있는 소리가 나고, 값이 작으면 부드럽고 평탄한 소리가 납니다.                Glide rate (sec/octave)             음과 음 사이의 포르타멘토(부드러운 피치 이동) 속도를 조절합니다.       값이 크면 음과 음 사이가 천천히 연결되고, 값이 작으면 거의 즉시 전환됩니다.                Attack Duration (s)             소리가 시작된 후 최대로 도달하는 데 걸리는 시간을 설정합니다.       값이 크면 소리가 천천히 올라오고, 값이 작으면 즉시 소리가 납니다.                Hold Duration (s)             Attack 이후 최대 레벨을 유지하는 시간을 설정합니다.       값이 크면 일정 시간 머무르고, 값이 작으면 곧바로 Decay로 넘어갑니다.                Voice Vibrato (semitones)             음정에 적용되는 진동의 깊이를 설정합니다.       값이 크면 음정이 넓게 흔들리고, 값이 작으면 거의 흔들리지 않습니다.                Decay Duration (s)             Attack 이후 Sustain 레벨까지 내려가는 데 걸리는 시간입니다.       값이 크면 천천히 줄어들고, 값이 작으면 빠르게 줄어듭니다.                Voice Vibrato speed (Hz)             음정 진동의 속도를 조절합니다.       값이 크면 빠르게 흔들리고, 값이 작으면 느리게 흔들립니다.                Filter Cutoff             필터가 통과시키는 주파수의 경계점을 설정합니다.       값이 크면 밝고 높은 음이 많이 통과하고, 값이 작으면 어두운 저음만 통과합니다.                Filter Strength             필터에 적용되는 모듈레이션의 강도를 설정합니다.       값이 크면 필터 변화가 크게 적용되고, 값이 작으면 거의 영향을 받지 않습니다.                Sustain Level             키를 누르고 있는 동안 유지되는 소리의 레벨입니다.       값이 크면 소리가 길게 유지되고, 값이 작으면 빠르게 사라집니다.                Release Duration (s)             키를 뗀 이후 소리가 완전히 사라지는 데 걸리는 시간입니다.       값이 크면 소리가 천천히 사라지고, 값이 작으면 즉시 사라집니다.                Filter Attack Duration (s)             필터 컷오프가 상승하는 데 걸리는 시간입니다.       값이 크면 점진적으로 변화하고, 값이 작으면 즉시 적용됩니다.                Filter Decay Duration (s)             필터 컷오프가 Attack 후 줄어드는 데 걸리는 시간입니다.       값이 크면 천천히 줄어들고, 값이 작으면 빠르게 줄어듭니다.                Filter Sustain Level             필터의 컷오프가 지속적으로 유지되는 레벨입니다.       값이 크면 밝은 음색이 유지되고, 값이 작으면 어두운 음색이 유지됩니다.                Filter Release Duration (s)             필터 컷오프가 키 릴리즈 후 원위치로 돌아가는 시간입니다.       값이 크면 천천히 변화하고, 값이 작으면 즉시 사라집니다.                Pitch Attack Duration (s)             음정이 시작 시 변하는 속도를 조절합니다.       값이 크면 피치가 천천히 상승하고, 값이 작으면 즉시 목표 피치에 도달합니다.                Pitch Decay Duration (s)             피치가 Attack 후 목표 값으로 줄어드는 시간입니다.       값이 크면 천천히 줄어들고, 값이 작으면 빠르게 줄어듭니다.                Pitch Sustain Level             피치가 유지되는 값입니다.       값이 크면 피치가 유지되고, 값이 작으면 유지되지 않습니다.                Pitch Release Duration (s)             키를 뗀 후 피치가 원래 값으로 돌아가는 데 걸리는 시간입니다.       값이 크면 천천히 되돌아가고, 값이 작으면 바로 되돌아갑니다.                Pitch EG Amount duration (semitones)             피치에 적용되는 Envelope의 세기입니다.       값이 크면 음정 변동 폭이 커지고, 값이 작으면 변동이 거의 없습니다.                isLegato             레가토(부드럽게 연결된 연주)를 활성화합니다.       값이 크면 음들이 부드럽게 연결되고, 값이 작으면 각 음이 분리되어 들립니다.                Key Tracking             키 높이에 따라 필터 컷오프를 조절합니다.       값이 크면 높은 음일수록 컷오프가 높아지고, 값이 작으면 변화가 없습니다.                Filter Envelope Scaling             필터에 대한 Envelope의 전체 영향을 조절합니다.       값이 크면 Envelope 효과가 크게 적용되고, 값이 작으면 거의 적용되지 않습니다.                restartVoiceLFO             음을 누를 때마다 LFO를 다시 시작할지를 설정합니다.       값이 크면 항상 처음부터 시작되고, 값이 작으면 이전 상태를 유지합니다.                Filter Enable             필터 기능을 켜거나 끕니다.       값이 크면 필터가 적용되고, 값이 작으면 필터가 적용되지 않습니다.                loopThruRelease             Release 중에도 루프가 유지될지를 설정합니다.       값이 크면 릴리즈 동안도 루프가 계속되고, 값이 작으면 릴리즈에서 루프가 멈춥니다.                isMonophonic             모노포닉(한 음만 연주 가능) 모드를 설정합니다.       값이 크면 한 번에 한 음만 연주되고, 값이 작으면 여러 음을 동시에 연주할 수 있습니다.             "
  }
  
]

